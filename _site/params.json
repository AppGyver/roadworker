{"name":"Roadworker","tagline":"Roadworker is a tool to manage Route53. It defines the state of Route53 using DSL, and updates Route53 according to DSL.","body":"**Notice**\r\n\r\n* Roadworker cannot update TTL of two or more same weighted A records (with different SetIdentifier) after creation.\r\n* `>= 0.4.3` compare resource records ignoring the order.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'roadworker'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install roadworker\r\n\r\n## Usage\r\n\r\n```sh\r\nexport AWS_ACCESS_KEY_ID='...'\r\nexport AWS_SECRET_ACCESS_KEY='...'\r\nroadwork -e -o Routefile\r\nvi Routefile\r\nroadwork -a --dry-run\r\nroudwork -a\r\n```\r\n\r\n## Help\r\n\r\n```\r\nUsage: roadwork [options]\r\n    -p, --profile PROFILE_NAME\r\n        --credentials-path PATH\r\n    -k, --access-key ACCESS_KEY\r\n    -s, --secret-key SECRET_KEY\r\n    -a, --apply\r\n    -f, --file FILE\r\n        --dry-run\r\n        --force\r\n        --no-health-check-gc\r\n    -e, --export\r\n    -o, --output FILE\r\n        --split\r\n        --with-soa-ns\r\n    -t, --test\r\n        --nameservers SERVERS\r\n        --port PORT\r\n        --target-zone REGEXP\r\n        --no-color\r\n        --debug\r\n```\r\n\r\n## Routefile example\r\n\r\n```ruby\r\nrequire 'other/routefile'\r\n\r\nhosted_zone \"winebarrel.jp.\" do\r\n  rrset \"winebarrel.jp.\", \"A\" do\r\n    ttl 300\r\n    resource_records(\r\n      \"127.0.0.1\",\r\n      \"127.0.0.2\"\r\n    )\r\n  end\r\n\r\n  rrset \"winebarrel.jp.\", \"MX\" do\r\n    ttl 300\r\n    resource_records(\r\n      \"10 mx.winebarrel.jp\",\r\n      \"10 mx2.winebarrel.jp\"\r\n    )\r\n  end\r\nend\r\n\r\nhosted_zone \"info.winebarrel.jp.\" do\r\n  rrset \"xxx.info.winebarrel.jp.\", \"A\" do\r\n    dns_name \"elb-dns-name.elb.amazonaws.com\"\r\n  end\r\n\r\n  rrset \"yyy.info.winebarrel.jp.\", \"A\" do\r\n    dns_name \"elb-dns-name2.elb.amazonaws.com\", :evaluate_target_health => true\r\n  end\r\n\r\n  rrset \"zzz.info.winebarrel.jp\", \"A\" do\r\n    set_identifier \"Primary\"\r\n    failover \"PRIMARY\"\r\n    health_check \"http://example.com:80/path\", :search_string => \"ANY_RESPONSE_STRING\", :request_interval => 30, :failure_threshold => 3\r\n    # If you want to specify the IP address:\r\n    #health_check \"http://192.0.43.10:80/path\", :host => \"example.com\",...\r\n    ttl 456\r\n    resource_records(\r\n      \"127.0.0.1\",\r\n      \"127.0.0.2\"\r\n    )\r\n  end\r\n\r\n  rrset \"zzz.info.winebarrel.jp\", \"A\" do\r\n    set_identifier \"Secondary\"\r\n    failover \"SECONDARY\"\r\n    health_check \"tcp://192.0.43.10:3306\", :request_interval => 30, :failure_threshold => 3\r\n    ttl 456\r\n    resource_records(\r\n      \"127.0.0.3\",\r\n      \"127.0.0.4\"\r\n    )\r\n  end\r\nend\r\n\r\n# Private HostedZone\r\nhosted_zone \"winebarrel.local.\" do\r\n  vpc \"us-east-1\", \"vpc-xxxxxxxx\"\r\n  vpc \"us-east-2\", \"vpc-xxxxxxxx\"\r\n\r\n  rrset \"winebarrel.local.\", \"A\" do\r\n    ttl 300\r\n    resource_records(\r\n      \"10.0.0.1\",\r\n      \"10.0.0.2\"\r\n    )\r\n  end\r\nend\r\n```\r\n\r\n### Dynamic private DNS example\r\n\r\n```ruby\r\nhosted_zone \"us-east-1.my.local.\" do\r\n  vpc \"us-east-1\", \"vpc-xxxxxxxx\"\r\n\r\n  AWS::EC2.new(region: \"us-east-1\").vpcs[\"vpc-xxxxxxxx\"].instances.each {|instance|\r\n    rrset \"#{instance.tags.Name}.us-east-1.my.local.\", \"A\" do\r\n      ttl 300\r\n      resource_records instance.private_ip_address\r\n    end\r\n  }\r\nend\r\n```\r\n\r\n## Test\r\n\r\nRoutefile compares the results of a query to the DNS and DSL in the test mode.\r\n\r\n```\r\nshell> roadwork -t\r\n..F..\r\ninfo.winebarrel.jp. A:\r\n  expected=127.0.0.1(300),127.0.0.3(300)\r\n  actual=127.0.0.1(300),127.0.0.2(300)\r\n5 examples, 1 failure\r\n```\r\n\r\n(Please note test of A(Alias) is not possible to perfection...)\r\n\r\n## Demo\r\n\r\n![Roadworker Demo](https://raw.githubusercontent.com/winebarrel/roadworker/master/etc/demo.gif)\r\n\r\n## DNS management using GitHub/Bitbucket\r\n\r\n![DNS management using Git](https://cacoo.com/diagrams/geJfslZqd8qne90t-BC7C7.png)\r\n\r\n* [Bitbucket example repository](https://bitbucket.org/winebarrel/roadworker-example/src)\r\n* [drone.io example project](https://drone.io/bitbucket.org/winebarrel/roadworker-example/latest)\r\n\r\n## Link\r\n* [RubyGems.org site](http://rubygems.org/gems/roadworker)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}